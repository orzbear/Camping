services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: outscout-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: outscout
      MYSQL_USER: outscout
      MYSQL_PASSWORD: outscout
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - outscout-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis
  redis:
    image: redis:7-alpine
    container_name: outscout-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - outscout-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: outscout-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - outscout-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      timeout: 30s
      retries: 10

  # Kibana (optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: outscout-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - outscout-network

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: outscout-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - outscout-network
    healthcheck:
      test: ['CMD', 'bash', '-c', "echo 'imok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: outscout-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - outscout-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      timeout: 20s
      retries: 10

  # API Service
  api:
    build:
      context: ../backend
      dockerfile: ../docker/api.Dockerfile
    container_name: outscout-api
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=outscout
      - MYSQL_USER=outscout
      - MYSQL_PASSWORD=outscout
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ES_HOST=http://elasticsearch:9200
      - KAFKA_BROKER=kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - outscout-network
    volumes:
      - ../seed:/app/seed:ro

  # Ingest Service
  ingest:
    build:
      context: ../backend
      dockerfile: ../docker/ingest.Dockerfile
    container_name: outscout-ingest
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=outscout
      - MYSQL_USER=outscout
      - MYSQL_PASSWORD=outscout
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka:9092
      - OPEN_METEO_BASE=https://api.open-meteo.com/v1/forecast
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - outscout-network

  # Planner Service
  planner:
    build:
      context: ../backend
      dockerfile: ../docker/planner.Dockerfile
    container_name: outscout-planner
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=outscout
      - MYSQL_USER=outscout
      - MYSQL_PASSWORD=outscout
      - KAFKA_BROKER=kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - outscout-network

  # Notifier Service
  notifier:
    build:
      context: ../backend
      dockerfile: ../docker/notifier.Dockerfile
    container_name: outscout-notifier
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=outscout
      - MYSQL_USER=outscout
      - MYSQL_PASSWORD=outscout
      - KAFKA_BROKER=kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - outscout-network

  # Frontend
  web:
    build:
      context: ../frontend
      dockerfile: ../docker/web.Dockerfile
    container_name: outscout-web
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - outscout-network

volumes:
  mysql_data:
  redis_data:
  elasticsearch_data:
  kafka_data:

networks:
  outscout-network:
    driver: bridge